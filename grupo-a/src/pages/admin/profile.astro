---
// src/pages/admin/profile.astro
import AdminLayout from '../../layouts/AdminLayout.astro';
import ProfileDashboard from '../../components/admin/ProfileDashboard.astro';
import { getProfileById } from '../../lib/services/profileService';

// Esta página obtendrá el perfil del usuario actual en el cliente
// El perfil se obtiene desde localStorage para evitar problemas de hidratación
// Podemos pasar un perfil vacío como valor inicial y luego actualizarlo en el cliente

// Estructura base para un perfil vacío
const emptyProfile = {
  basics: {
    name: '',
    last_name: '',
    label: '',
    image: { local: '/images/placeholder.png' },
    email: '',
    profiles: []
  },
  skills: [],
  projects: []
};
---

<AdminLayout title="Mi Perfil">
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">Mi Perfil</h1>
    <p class="text-gray-600 dark:text-gray-400">
      Visualiza y administra tu información personal y profesional
    </p>
  </div>
  
  <div id="profile-container">
    <div class="animate-pulse">
      <div class="bg-gray-200 dark:bg-gray-700 h-32 rounded-t-lg mb-2"></div>
      <div class="bg-gray-100 dark:bg-gray-800 p-6 rounded-b-lg">
        <div class="h-6 bg-gray-200 dark:bg-gray-700 rounded mb-4 w-1/2"></div>
        <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded mb-4 w-full"></div>
        <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded mb-4 w-3/4"></div>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  import { getProfile } from '../../utils/auth.js';
  
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      // Obtener perfil del usuario autenticado desde localStorage
      const profile = getProfile();
      
      if (!profile) {
        throw new Error('No se pudo cargar el perfil');
      }
      
      // Crear el componente de perfil dinámicamente
      const profileContainer = document.getElementById('profile-container');
      
      // Eliminar el placeholder de carga
      profileContainer.innerHTML = '';
      
      // Crear un elemento que contendrá el HTML del perfil
      const profileElement = document.createElement('div');
      profileElement.innerHTML = await renderProfileDashboard(profile);
      
      // Añadir el elemento al contenedor
      profileContainer.appendChild(profileElement);
    } catch (error) {
      console.error('Error al cargar el perfil:', error);
      
      const profileContainer = document.getElementById('profile-container');
      profileContainer.innerHTML = `
        <div class="bg-red-100 dark:bg-red-900 p-4 rounded-lg">
          <h2 class="text-lg font-bold text-red-800 dark:text-red-200 mb-2">Error al cargar el perfil</h2>
          <p class="text-red-700 dark:text-red-300">
            No se pudo cargar la información del perfil. Por favor, inténtalo nuevamente o contacta a soporte.
          </p>
        </div>
      `;
    }
  });
  
  // Función para renderizar el componente ProfileDashboard
  async function renderProfileDashboard(profile) {
    // Como no podemos usar componentes Astro dinámicamente en el cliente,
    // recreamos la estructura HTML que generaría el componente
    
    // Función para formatear habilidades
    function formatSkills(skills, type) {
      if (!skills || !Array.isArray(skills)) return '';
      
      return skills
        .filter(skill => skill.type === type)
        .map(skill => `
          <div>
            <div class="flex justify-between mb-1">
              <span class="text-gray-700 dark:text-gray-300">${skill.name}</span>
              <span class="text-gray-500 dark:text-gray-400">${skill.level * 10}%</span>
            </div>
            <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
              <div 
                class="bg-${type === 'hard' ? 'indigo-600 dark:bg-indigo-500' : 'green-500 dark:bg-green-600'} h-2.5 rounded-full" 
                style="width: ${skill.level * 10}%"
              ></div>
            </div>
          </div>
        `)
        .join('');
    }
    
    // Función para formatear proyectos
    function formatProjects(projects) {
      if (!projects || !Array.isArray(projects)) return '';
      
      return projects
        .map(project => `
          <div class="bg-gray-50 dark:bg-gray-700 rounded-lg overflow-hidden shadow-sm">
            ${project.image ? `
              <img 
                src="${project.image}" 
                alt="${project.name}" 
                class="w-full h-48 object-cover"
              />
            ` : ''}
            <div class="p-4">
              <h3 class="text-lg font-bold mb-2 text-gray-800 dark:text-white">
                ${project.name}
              </h3>
              <p class="text-gray-600 dark:text-gray-300 text-sm mb-3">
                ${project.description || ''}
              </p>
              
              ${project.url ? `
                <a 
                  href="${project.url}" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="text-indigo-600 dark:text-indigo-400 hover:underline text-sm inline-flex items-center"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                  Ver proyecto
                </a>
              ` : ''}
              
              ${project.featured ? `
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200 ml-2">
                  Destacado
                </span>
              ` : ''}
            </div>
          </div>
        `)
        .join('');
    }
    
    // Función para formatear redes sociales
    function formatSocials(socials) {
      if (!socials || !Array.isArray(socials)) return '';
      
      // Obtener íconos para redes sociales
      const icons = {
        GitHub: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"></path></svg>`,
        LinkedIn: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg>`,
        Twitter: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path></svg>`,
        Instagram: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/></svg>`,
        Default: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.066 9.645c.183 4.04-2.83 8.544-8.164 8.544-1.622 0-3.131-.476-4.402-1.291 1.524.18 3.045-.244 4.252-1.189-1.256-.023-2.317-.854-2.684-1.995.451.086.895.061 1.298-.049-1.381-.278-2.335-1.522-2.304-2.853.388.215.83.344 1.301.359-1.279-.855-1.641-2.544-.889-3.835 1.416 1.738 3.533 2.881 5.92 3.001-.419-1.796.944-3.527 2.799-3.527.825 0 1.572.349 2.096.907.654-.128 1.27-.368 1.824-.697-.215.671-.67 1.233-1.263 1.589.581-.07 1.135-.224 1.649-.453-.384.578-.87 1.084-1.433 1.489z"></path></svg>`
      };
      
      return socials
        .map(social => `
          <a 
            href="${social.url}" 
            target="_blank" 
            rel="noopener noreferrer" 
            class="flex items-center text-sm text-white hover:text-indigo-200 transition"
            title="${social.network}: ${social.username}"
          >
            <span class="mr-1">
              ${icons[social.network] || icons.Default}
            </span>
            <span>${social.username}</span>
          </a>
        `)
        .join('');
    }
    
    // Función para formatear la experiencia laboral
    function formatWorkExperience(work) {
      if (!work || !Array.isArray(work) || work.length === 0) return '';
      
      return `
        <section class="mb-8">
          <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">Experiencia Laboral</h2>
          
          <div class="space-y-6">
            ${work.map(item => `
              <div class="border-l-4 border-indigo-500 pl-4 pb-2">
                <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
                  <h3 class="text-lg font-bold text-gray-800 dark:text-white">
                    ${item.position} - ${item.company}
                  </h3>
                  <span class="text-gray-500 dark:text-gray-400 text-sm md:text-right">
                    ${item.startDate} ${item.endDate ? ` - ${item.endDate}` : ' - Actual'}
                  </span>
                </div>
                
                ${item.summary ? `
                  <p class="text-gray-700 dark:text-gray-300 mb-2">${item.summary}</p>
                ` : ''}
                
                ${item.highlights && item.highlights.length > 0 ? `
                  <ul class="list-disc list-inside text-gray-600 dark:text-gray-400">
                    ${item.highlights.map(highlight => `
                      <li>${highlight}</li>
                    `).join('')}
                  </ul>
                ` : ''}
              </div>
            `).join('')}
          </div>
        </section>
      `;
    }
    
    // Función para formatear la educación
    function formatEducation(education) {
      if (!education || !Array.isArray(education) || education.length === 0) return '';
      
      return `
        <section>
          <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">Educación</h2>
          
          <div class="space-y-6">
            ${education.map(edu => `
              <div class="border-l-4 border-green-500 pl-4 pb-2">
                <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
                  <h3 class="text-lg font-bold text-gray-800 dark:text-white">
                    ${edu.studyType} - ${edu.institution}
                  </h3>
                  <span class="text-gray-500 dark:text-gray-400 text-sm md:text-right">
                    ${edu.startDate} ${edu.endDate ? ` - ${edu.endDate}` : ' - Actual'}
                  </span>
                </div>
                
                <p class="text-gray-700 dark:text-gray-300 mb-2">${edu.area}</p>
                
                ${edu.courses && edu.courses.length > 0 ? `
                  <div>
                    <p class="text-gray-600 dark:text-gray-400 font-medium mb-1">Cursos relevantes:</p>
                    <ul class="list-disc list-inside text-gray-600 dark:text-gray-400">
                      ${edu.courses.map(course => `
                        <li>${course}</li>
                      `).join('')}
                    </ul>
                  </div>
                ` : ''}
              </div>
            `).join('')}
          </div>
        </section>
      `;
    }
    
    // Crear el HTML del perfil
    return `
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
        <!-- Encabezado del perfil -->
        <div class="bg-indigo-600 dark:bg-indigo-800 p-6">
          <div class="flex flex-col md:flex-row items-center md:items-start gap-6">
            <div class="flex-shrink-0">
              <img 
                src="${profile.basics.image?.local || '/images/placeholder.png'}" 
                alt="Foto de ${profile.basics.name}"
                class="w-32 h-32 rounded-full border-4 border-white object-cover"
              />
            </div>
            <div class="flex-1 text-center md:text-left">
              <h1 class="text-2xl font-bold text-white mb-1">
                ${profile.basics.name} ${profile.basics.last_name}
              </h1>
              <p class="text-indigo-100 mb-3">${profile.basics.label || 'Desarrollador'}</p>
              
              <!-- Información de contacto -->
              ${profile.basics.email ? `
                <div class="flex items-center justify-center md:justify-start mb-2">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-indigo-200 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span class="text-white">${profile.basics.email}</span>
                </div>
              ` : ''}
              
              ${profile.basics.phone ? `
                <div class="flex items-center justify-center md:justify-start mb-2">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-indigo-200 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  <span class="text-white">${profile.basics.phone}</span>
                </div>
              ` : ''}
              
              ${profile.basics.location ? `
                <div class="flex items-center justify-center md:justify-start">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-indigo-200 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  <span class="text-white">
                    ${[
                      profile.basics.location?.city,
                      profile.basics.location?.region,
                      profile.basics.location?.country
                    ].filter(Boolean).join(', ')}
                  </span>
                </div>
              ` : ''}
            </div>
            
            <div class="mt-4 md:mt-0">
              <a 
                href="/admin/edit-profile" 
                class="inline-flex items-center px-4 py-2 bg-white text-indigo-700 rounded-md hover:bg-indigo-50 transition-colors"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                </svg>
                Editar Perfil
              </a>
            </div>
          </div>
          
          <!-- Redes sociales -->
          ${profile.basics.profiles && profile.basics.profiles.length > 0 ? `
            <div class="mt-6 flex flex-wrap justify-center md:justify-start gap-4">
              ${formatSocials(profile.basics.profiles)}
            </div>
          ` : ''}
        </div>
        
        <!-- Contenido del perfil -->
        <div class="p-6">
          <!-- Resumen -->
          ${profile.basics.summary ? `
            <section class="mb-8">
              <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">Resumen</h2>
              <p class="text-gray-700 dark:text-gray-300">${profile.basics.summary}</p>
            </section>
          ` : ''}
          
          <!-- Habilidades -->
          ${profile.skills && profile.skills.length > 0 ? `
            <section class="mb-8">
              <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">Habilidades</h2>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Habilidades técnicas -->
                <div>
                  <h3 class="text-lg font-semibold mb-3 text-gray-700 dark:text-gray-200">Habilidades Técnicas</h3>
                  <div class="space-y-3">
                    ${formatSkills(profile.skills, 'hard')}
                  </div>
                </div>
                
                <!-- Habilidades blandas -->
                <div>
                  <h3 class="text-lg font-semibold mb-3 text-gray-700 dark:text-gray-200">Habilidades Blandas</h3>
                  <div class="space-y-3">
                    ${formatSkills(profile.skills, 'soft')}
                  </div>
                </div>
              </div>
            </section>
          ` : ''}
          
          <!-- Proyectos -->
          ${profile.projects && profile.projects.length > 0 ? `
            <section class="mb-8">
              <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">Proyectos</h2>
              
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                ${formatProjects(profile.projects)}
              </div>
            </section>
          ` : ''}
          
          <!-- Experiencia laboral -->
          ${formatWorkExperience(profile.work)}
          
          <!-- Educación -->
          ${formatEducation(profile.education)}
        </div>
      </div>
    `;
  }
</script>
