---
// FeaturedProjects.astro
import { getFeaturedProjects } from '../../services/profileService';
import type { ProjectWithAuthor, SectionProps } from '../../types';
import Button from '../ui/Button.astro';

interface Props extends SectionProps {}
const { title = "Proyectos Destacados", class: className = "", id = "proyectos" } = Astro.props;

// Obtener los proyectos destacados - Ahora usando el ORM
const featuredProjects = await getFeaturedProjects();
---

<section id={id} class:list={["py-16 bg-white dark:bg-gray-900 w-full mb-8", className]}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{title}</h2>
      <div class="h-1 w-16 bg-indigo-600 mx-auto"></div>
    </div>
    
    {featuredProjects.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {featuredProjects.map((project: ProjectWithAuthor) => (
          <article class="bg-gray-50 dark:bg-gray-800 rounded-lg shadow hover:shadow-lg transition-all duration-200 hover:-translate-y-1 flex flex-col h-full">
            <div class="p-6 border-b border-gray-200 dark:border-gray-700">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-1">{project.name}</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                Por <span class="text-indigo-600 dark:text-indigo-400 font-semibold">{project.author}</span>
              </p>
            </div>
            
            <div class="p-6 flex-grow flex flex-col">
              <p class="text-gray-700 dark:text-gray-300 mb-4 line-clamp-3">{project.description}</p>
              
              {project.highlights.length > 0 && (
                <div class="mb-6">
                  <h4 class="text-base font-semibold text-gray-900 dark:text-white mb-2">Características destacadas:</h4>
                  <ul class="list-disc pl-6 space-y-1">
                    {project.highlights.map(highlight => (
                      <li class="text-gray-700 dark:text-gray-300 text-sm">{highlight}</li>
                    ))}
                  </ul>
                </div>
              )}
              
              {project.technologies.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-6 mt-auto">
                  {project.technologies.map(tech => (
                    <span class="bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-2 py-1 rounded text-xs font-semibold">{tech}</span>
                  ))}
                </div>
              )}
              
              <div class="flex justify-center mt-4">
                <Button 
                  href={project.url} 
                  variant="secondary" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="project-button w-full sm:w-auto"
                >
                  Ver proyecto
                </Button>
              </div>
            </div>
          </article>
        ))}
      </div>
    ) : (
      <p class="text-center text-gray-600 dark:text-gray-400 italic my-12">No hay proyectos destacados disponibles actualmente.</p>
    )}
  </div>
</section>

<style>
  /* Estilos específicos que no pueden ser fácilmente manejados con Tailwind */
  :global(.project-button) {
    @apply text-center;
  }
  
  @media (max-width: 640px) {
    :global(.project-button) {
      @apply w-11/12 mx-auto;
    }
  }
</style>