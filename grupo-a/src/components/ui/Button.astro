---
import type { ButtonVariant, ButtonSize } from '../../types';

interface Props {
  href?: string;
  type?: "button" | "submit" | "reset";
  class?: string;
  variant?: ButtonVariant;
  size?: ButtonSize;
  target?: string;
  rel?: string;
  disabled?: boolean;
  ariaLabel?: string;
  onClick?: string;
}

const {
  href,
  type = "button",
  class: className = "",
  variant = "primary",
  size = "md",
  target,
  rel,
  disabled = false,
  ariaLabel,
  onClick,
  ...rest
} = Astro.props;

const Tag = href ? "a" : "button";
---

<Tag
  class:list={[
    "btn",
    `btn-${variant}`,
    `btn-${size}`,
    className,
    disabled && "btn-disabled"
  ]}
  {...(href ? { href, target, rel } : { type })}
  aria-label={ariaLabel}
  {...(onClick && { onclick: onClick })}
  {...(disabled && { disabled })}
  {...rest}
>
  <slot />
</Tag>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 2px solid var(--color-text-dark, #1a202c);
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: var(--radius-sm, 0.25rem);
    background-color: var(--color-white, #ffffff);
    color: var(--color-text-dark, #1a202c);
  }

  .btn:hover:not(.btn-disabled) {
    background-color: var(--color-text-dark, #1a202c);
    color: var(--color-text-light, #e2e8f0);
  }

  .btn:focus-visible {
    outline: 2px solid var(--color-accent, #4f46e5);
    outline-offset: 2px;
  }

  .btn-primary {
    border-color: var(--color-accent, #4f46e5);
    color: var(--color-accent, #4f46e5);
  }

  .btn-primary:hover:not(.btn-disabled) {
    background-color: var(--color-accent, #4f46e5);
    color: var(--color-white, #ffffff);
  }

  .btn-secondary {
    border-color: var(--color-text-dark, #1a202c);
    color: var(--color-text-dark, #1a202c);
  }

  .btn-outline {
    border-color: var(--color-border, #e2e8f0);
    color: var(--color-text, #4a5568);
    background-color: transparent;
  }
  
  .btn-outline:hover:not(.btn-disabled) {
    background-color: var(--color-gray-100, #f7fafc);
    color: var(--color-text-dark, #1a202c);
  }
  
  .btn-ghost {
    border-color: transparent;
    background-color: transparent;
    color: var(--color-text, #4a5568);
  }
  
  .btn-ghost:hover:not(.btn-disabled) {
    background-color: var(--color-gray-100, #f7fafc);
    color: var(--color-text-dark, #1a202c);
  }
  
  .btn-link {
    border-color: transparent;
    background-color: transparent;
    color: var(--color-accent, #4f46e5);
    padding: 0;
    text-decoration: underline;
    border-radius: 0;
  }
  
  .btn-link:hover:not(.btn-disabled) {
    color: var(--color-accent-dark, #3c366b);
    background-color: transparent;
  }

  .btn-disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .btn-xs {
    font-size: var(--font-size-xs, 0.75rem);
    padding: 0.25rem 0.5rem;
  }

  .btn-sm {
    font-size: var(--font-size-xs, 0.75rem);
    padding: 0.375rem 0.75rem;
  }

  .btn-md {
    font-size: var(--font-size-sm, 0.875rem);
    padding: 0.5rem 1rem;
  }

  .btn-lg {
    font-size: var(--font-size-md, 1rem);
    padding: 0.625rem 1.25rem;
  }
  
  .btn-xl {
    font-size: var(--font-size-lg, 1.125rem);
    padding: 0.75rem 1.5rem;
  }
</style>