---
interface Props {
  href?: string;
  type?: "button" | "submit" | "reset";
  class?: string;
  variant?: "primary" | "secondary";
  size?: "sm" | "md" | "lg";
  target?: string;
  rel?: string;
}

const {
  href,
  type = "button",
  class: className = "",
  variant = "primary",
  size = "md",
  target,
  rel,
  ...rest
} = Astro.props;

const Tag = href ? "a" : "button";
---

<Tag
  class:list={[
    "btn",
    `btn-${variant}`,
    `btn-${size}`,
    className,
  ]}
  {...href ? { href, target, rel } : { type }}
  {...rest}
>
  <slot />
</Tag>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 2px solid var(--color-text-dark, #1a202c);
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: var(--radius-sm, 0.25rem);
    background-color: var(--color-white, #ffffff);
    color: var(--color-text-dark, #1a202c);
  }

  .btn:hover {
    background-color: var(--color-text-dark, #1a202c);
    color: var(--color-text-light, #e2e8f0);
  }

  .btn:focus {
    outline: 2px solid var(--color-accent, #4f46e5);
    outline-offset: 2px;
  }

  .btn-primary {
    border-color: var(--color-accent, #4f46e5);
    color: var(--color-accent, #4f46e5);
  }

  .btn-primary:hover {
    background-color: var(--color-accent, #4f46e5);
    color: var(--color-white, #ffffff);
  }

  .btn-secondary {
    border-color: var(--color-text-dark, #1a202c);
    color: var(--color-text-dark, #1a202c);
  }

  .btn-sm {
    font-size: var(--font-size-xs, 0.75rem);
    padding: 0.375rem 0.75rem;
  }

  .btn-md {
    font-size: var(--font-size-sm, 0.875rem);
    padding: 0.5rem 1rem;
  }

  .btn-lg {
    font-size: var(--font-size-md, 1rem);
    padding: 0.625rem 1.25rem;
  }
</style>