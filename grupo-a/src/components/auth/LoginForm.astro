---
// src/components/auth/LoginForm.astro
// Componente para el formulario de inicio de sesión
---

<div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md w-full max-w-md">
  <h2 class="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white">Iniciar Sesión</h2>
  
  <form id="loginForm" class="space-y-6">
    <div class="space-y-2">
      <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
        Nombre de usuario
      </label>
      <input
        type="text"
        id="username"
        name="username"
        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 dark:bg-gray-700 dark:text-white"
        required
      />
    </div>
    
    <div class="space-y-2">
      <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
        Contraseña
      </label>
      <input
        type="password"
        id="password"
        name="password"
        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 dark:bg-gray-700 dark:text-white"
        required
      />
    </div>
    
    <div class="hidden" id="errorMessage">
      <p class="text-red-600 dark:text-red-400 text-sm font-medium"></p>
    </div>
    
    <div>
      <button
        type="submit"
        class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      >
        Iniciar Sesión
      </button>
    </div>
  </form>
  
  <div class="mt-6 text-center">
    <p class="text-sm text-gray-600 dark:text-gray-400">
      ¿No tienes una cuenta?
      <a href="/auth/register" class="font-medium text-indigo-600 dark:text-indigo-400 hover:text-indigo-500">
        Regístrate aquí
      </a>
    </p>
  </div>
</div>

<script>
  import { login } from '../../utils/auth.js';
  
  document.addEventListener('DOMContentLoaded', () => {
    const loginForm = document.getElementById('loginForm');
    const errorMessage = document.getElementById('errorMessage');
    const errorText = errorMessage.querySelector('p');
    
    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;
      
      // Mostrar estado de carga
      const submitButton = loginForm.querySelector('button[type="submit"]');
      const originalButtonText = submitButton.innerHTML;
      submitButton.innerHTML = 'Iniciando sesión...';
      submitButton.disabled = true;
      
      // Ocultar mensaje de error previo
      errorMessage.classList.add('hidden');
      
      try {
        const result = await login(username, password);
        
        if (result.success) {
          // Obtener parámetro de redirección si existe
          const urlParams = new URLSearchParams(window.location.search);
          const redirectUrl = urlParams.get('redirect') || '/admin/profile';
          
          // Redirigir al usuario al panel o a la URL de redirección
          window.location.href = redirectUrl;
        } else {
          // Mostrar mensaje de error
          errorText.textContent = result.message || 'Error al iniciar sesión';
          errorMessage.classList.remove('hidden');
          
          // Restaurar botón
          submitButton.innerHTML = originalButtonText;
          submitButton.disabled = false;
        }
      } catch (error) {
        // Mostrar error genérico
        errorText.textContent = 'Error al conectar con el servidor';
        errorMessage.classList.remove('hidden');
        
        // Restaurar botón
        submitButton.innerHTML = originalButtonText;
        submitButton.disabled = false;
      }
    });
  });
</script>
